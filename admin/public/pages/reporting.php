<?php
// Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted): 2025-05-04 09:45:00
// Current User's Login: aedanevangelista

session_start();
include "../../backend/db_connection.php"; // Adjust path as needed
include "../../backend/check_role.php";    // Adjust path as needed
checkRole('Reports'); // Or appropriate role

// PHP for default date range settings, if desired
$default_start_date = date('Y-m-01'); // Default to start of current month
$default_end_date = date('Y-m-d');   // Default to today
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reports</title>
    <link rel="stylesheet" href="/css/sidebar.css"> <!-- Adjust path -->
    <link rel="stylesheet" href="/css/reports.css"> <!-- Adjust/Create path -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Add any other necessary CSS/JS (e.g., for date pickers, charts like Chart.js) -->
    <style>
        /* Basic styles for reports.css or inline */
        .main-content { padding: 20px; }
        .report-controls { margin-bottom: 20px; padding: 15px; background-color: #f0f0f0; border-radius: 5px; display: flex; flex-wrap: wrap; gap: 15px; align-items: center; }
        .report-controls label { font-weight: bold; margin-right: 5px; white-space: nowrap;}
        .report-controls input[type="date"], .report-controls select, .report-controls button { padding: 8px 12px; border: 1px solid #ccc; border-radius: 4px; font-size: 14px; }
        .report-controls button { background-color: #007bff; color: white; cursor: pointer; margin-left: auto; /* Push button to the right */ }
        .report-controls button:hover { background-color: #0056b3; }
        .date-range-controls { display: none; /* Hidden by default */ gap: 15px; align-items: center;}
        .report-area { margin-top: 20px; }

        /* Styles for report content generated by PHP */
        .report-title { margin-top: 0; color: #333; border-bottom: 2px solid #ccc; padding-bottom: 5px; }
        .report-subtitle { margin-top: 15px; margin-bottom: 10px; color: #555; font-size: 1.1em; }
        .report-summary-box { border: 1px solid #ddd; padding: 15px; margin-bottom: 20px; background-color: #f9f9f9; border-radius: 4px; }
        .summary-table { width: auto; } /* Let summary table size itself */
        .summary-table th { text-align: right; padding-right: 10px; font-weight: bold; color: #333; }
        .summary-table td { text-align: left; }
        .accounts-table, .report-table { width: 100%; border-collapse: collapse; margin-top: 10px; margin-bottom: 20px; }
        .accounts-table th, .accounts-table td,
        .report-table th, .report-table td { border: 1px solid #dee2e6; padding: 8px 10px; text-align: left; font-size: 14px; vertical-align: top;}
        .accounts-table th, .report-table th { background-color: #e9ecef; font-weight: 600; color: #495057; }
        .accounts-table tbody tr:nth-child(odd),
        .report-table tbody tr:nth-child(odd) { background-color: #ffffff; }
        .accounts-table tbody tr:nth-child(even),
        .report-table tbody tr:nth-child(even) { background-color: #f8f9fa; }
        .accounts-table tbody tr:hover,
        .report-table tbody tr:hover { background-color: #e2e6ea; }
        .no-data-message { text-align: center; padding: 20px; color: #6c757d; font-style: italic; }
        .report-error-message { text-align: center; padding: 20px; color: #721c24; font-weight: bold; border: 1px solid #f5c6cb; background-color: #f8d7da; border-radius: 4px;}
        .numeric, .currency { text-align: right; }
        .currency::before { content: "â‚± "; /* Add PHP sign if needed, or handle in PHP */ }
        .inventory-section { margin-bottom: 25px; } /* Space between inventory sections */

        /* Status classes from your orders page (example) */
        .status-completed { color: green; }
        .status-active { color: blue; }
        .status-pending { color: orange; }
        .status-rejected { color: red; }
        /* etc. */

        /* Styles from previous JS version */
        .loading-message { text-align: center; padding: 30px; font-size: 1.1em; color: #6c757d; }
        .low-stock-value { /* Style low stock values if needed, handled by inline style in PHP now */ }

    </style>
</head>
<body>
    <?php include '../sidebar.php'; // Adjust path ?>

    <div class="main-content">
        <h1><i class="fas fa-chart-bar"></i> Reports</h1>

        <div class="report-controls">
            <div>
                <label for="reportSelector">Select Report:</label>
                <select id="reportSelector" onchange="toggleDateControls()">
                    <option value="">-- Choose Report --</option>
                    <option value="sales_summary">Sales Summary</option>
                    <option value="inventory_status">Inventory Status Report</option> <!-- Renamed/Ensure this value matches -->
                    <option value="order_trends">Order Listing</option> <!-- Renamed/Ensure this value matches -->
                    <option value="sales_by_client">Sales by Client</option>
                    <option value="sales_by_product">Sales by Product</option>
                    <!-- Add other report types -->
                </select>
            </div>
            <div class="date-range-controls" id="dateControls">
                <label for="startDate">From:</label>
                <input type="date" id="startDate" value="<?= htmlspecialchars($default_start_date) ?>">
                <label for="endDate">To:</label>
                <input type="date" id="endDate" value="<?= htmlspecialchars($default_end_date) ?>">
            </div>
            <button onclick="generateReport()">Generate Report</button>
        </div>

        <div id="report-display-area" class="report-area">
            <!-- Report content will be loaded here -->
            <p class="no-data-message">Please select and generate a report.</p> <!-- Use consistent class -->
        </div>
    </div>

    <script>
        const displayArea = document.getElementById('report-display-area');
        const dateControls = document.getElementById('dateControls');
        const reportSelector = document.getElementById('reportSelector');

        function toggleDateControls() {
            const selectedReport = reportSelector.value;
            // Show date controls only for reports that need them
            // Add 'order_trends', 'sales_by_client', 'sales_by_product' if they use dates
            if (selectedReport === 'sales_summary' || selectedReport === 'order_trends' || selectedReport === 'sales_by_client' || selectedReport === 'sales_by_product') {
                dateControls.style.display = 'flex';
            } else {
                dateControls.style.display = 'none';
            }
        }
        // Initial call to set correct visibility on page load
        toggleDateControls();

        function generateReport() {
            const reportType = reportSelector.value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!reportType) {
                displayArea.innerHTML = '<p class="no-data-message">Please select a report type.</p>';
                return;
            }

            // Basic date validation if controls are visible
            if (dateControls.style.display === 'flex' && (!startDate || !endDate || startDate > endDate)) {
                 displayArea.innerHTML = '<p class="report-error-message">Please select a valid date range (From date cannot be after To date).</p>'; // Use error class
                 return;
            }

            displayArea.innerHTML = '<p class="loading-message"><i class="fas fa-spinner fa-spin"></i> Generating report...</p>';

            // --- Use FormData for POST request ---
            const formData = new FormData();
            formData.append('report_type', reportType);
            // Append dates only if the report type requires them (optional, PHP handles nulls)
            if (reportType === 'sales_summary' || reportType === 'order_trends' || reportType === 'sales_by_client' || reportType === 'sales_by_product') {
                if (startDate) formData.append('start_date', startDate);
                if (endDate) formData.append('end_date', endDate);
            }

            fetch('/backend/fetch_report.php', { // Corrected endpoint name
                method: 'POST',
                body: formData
            })
            .then(response => {
                // Check if the response status is OK (2xx)
                if (!response.ok) {
                    // If not OK, read the response text (which should be the HTML error message)
                    return response.text().then(errorHtml => {
                        // Throw an error with the HTML content
                         throw new Error(errorHtml || `HTTP error! status: ${response.status}`);
                    });
                }
                // If OK, read the response text (which is the report HTML)
                return response.text();
            })
            .then(reportHtml => {
                // Display the received HTML directly
                displayArea.innerHTML = reportHtml;
            })
            .catch(error => {
                console.error('Error fetching or displaying report:', error);
                // Display the error HTML (or a generic message if error object doesn't contain HTML)
                // Check if error.message contains HTML tags (simple check)
                if (error.message && error.message.includes('<') && error.message.includes('>')) {
                     displayArea.innerHTML = error.message; // Display the HTML error from sendError()
                } else {
                     displayArea.innerHTML = `<p class="report-error-message">An error occurred: ${escapeHtml(error.message)}</p>`; // Display generic error
                }
            });
        }

        // Helper function to prevent basic XSS (remains useful if displaying JS-generated errors)
        function escapeHtml(unsafe) {
            if (unsafe === null || unsafe === undefined) return '';
            return String(unsafe)
                 .replace(/&/g, "&amp;")
                 .replace(/</g, "&lt;")
                 .replace(/>/g, "&gt;")
                 .replace(/"/g, "&quot;")
                 .replace(/'/g, "&#039;");
        }

    </script>

</body>
</html>