<?php
// UTC: 2025-05-04 07:36:05
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

// Use relative paths from the current file's directory for includes
include_once __DIR__ . '/../../backend/check_role.php';
include_once __DIR__ . '/../../backend/db_connection.php'; // Needed for role check below

// --- Permission Check ---
$isLoggedIn = isset($_SESSION['admin_user_id']) || isset($_SESSION['client_user_id']) || isset($_SESSION['user_id']);
if (!$isLoggedIn) {
    header('Location: /public/index.php');
    exit;
}

$role = $_SESSION['admin_role'] ?? $_SESSION['client_role'] ?? $_SESSION['role'] ?? 'guest';
$isAllowed = false;

if ($role !== 'guest' && isset($conn)) {
    $stmt = $conn->prepare("SELECT pages FROM roles WHERE role_name = ? AND status = 'active'");
    if ($stmt) {
        $stmt->bind_param("s", $role);
        $stmt->execute();
        $stmt->bind_result($pages);
        if ($stmt->fetch()) {
            $allowedPages = array_map('trim', explode(',', $pages ?? ''));
            if (in_array('Reporting', $allowedPages)) {
                $isAllowed = true;
            }
        }
        $stmt->close();
    } else {
        error_log("Error preparing statement for role check in reporting.php: " . $conn->error);
    }
}

if (!$isAllowed) {
    echo "Access Denied. You do not have permission to view this page.";
    if (isset($conn) && $conn instanceof mysqli) $conn->close();
    exit;
}
// --- End Permission Check ---

$pageTitle = "Reporting";

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo htmlspecialchars($pageTitle) . ' - TopExchange'; ?></title>

    <!-- CSS Includes -->
    <link rel="stylesheet" href="/css/accounts.css">
    <link rel="stylesheet" href="/css/sidebar.css">
    <link rel="stylesheet" href="/css/toast.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link rel="stylesheet" href="/css/reporting.css">

    <style>
        /* Basic styles if reporting.css is missing or incomplete */
        .main-content { margin-left: 250px; padding: 20px; }
        .reporting-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; flex-wrap: wrap; gap: 15px; }
        .reporting-header h1 { margin: 0; flex-grow: 1; }
        .report-controls { display: flex; align-items: center; gap: 10px; flex-wrap: wrap; }
        .report-controls label { font-weight: 500; }
        .report-controls select, .report-controls input[type="date"], .report-controls button { padding: 8px 12px; border: 1px solid #ccc; border-radius: 4px; font-size: 14px; }
        .report-controls button { background-color: #007bff; color: white; cursor: pointer; transition: background-color 0.2s; }
        .report-controls button:hover { background-color: #0056b3; }
        .report-controls button:disabled { background-color: #aaa; cursor: not-allowed; }
        #report-display-area { margin-top: 20px; background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); min-height: 100px; }
        .loading-message, .report-error-message, .no-data-message { text-align: center; padding: 30px; font-size: 1.1em; color: #666; }
        .report-error-message { color: #dc3545; font-weight: bold; }
        /* Styles for report content generated by PHP */
        .report-title { margin-top: 0; color: #333; border-bottom: 2px solid #ccc; padding-bottom: 5px; }
        .report-subtitle { margin-top: 15px; margin-bottom: 10px; color: #555; font-size: 1.1em; }
        .report-summary-box { border: 1px solid #ddd; padding: 15px; margin-bottom: 20px; background-color: #f9f9f9; border-radius: 4px; }
        .summary-table { width: auto; } /* Let summary table size itself */
        .summary-table th { text-align: right; padding-right: 10px; font-weight: bold; color: #333; }
        .summary-table td { text-align: left; }
        .accounts-table, .report-table { width: 100%; border-collapse: collapse; margin-top: 10px; margin-bottom: 20px; }
        .accounts-table th, .accounts-table td,
        .report-table th, .report-table td { border: 1px solid #dee2e6; padding: 8px 10px; text-align: left; font-size: 14px; vertical-align: top;}
        .accounts-table th, .report-table th { background-color: #e9ecef; font-weight: 600; color: #495057; }
        .accounts-table tbody tr:nth-child(odd),
        .report-table tbody tr:nth-child(odd) { background-color: #ffffff; }
        .accounts-table tbody tr:nth-child(even),
        .report-table tbody tr:nth-child(even) { background-color: #f8f9fa; }
        .accounts-table tbody tr:hover,
        .report-table tbody tr:hover { background-color: #e2e6ea; }
        .no-data-message { text-align: center; padding: 20px; color: #6c757d; font-style: italic; }
        .numeric, .currency { text-align: right; }
        .currency::before { content: "â‚± "; /* Add PHP sign if needed, or handle in PHP */ }
        .inventory-section { margin-bottom: 25px; } /* Space between inventory sections */
        /* Use a class for low stock highlight instead of inline style */
        .low-stock-highlight { color: orange; font-weight: bold; }
        /* Status classes from your orders page (example) */
        .status-completed { color: green; }
        .status-active { color: blue; }
        .status-pending { color: orange; }
        .status-rejected { color: red; }
        /* etc. */
    </style>

</head>
<body>
    <div id="toast-container"></div> <!-- For notifications -->

    <?php include __DIR__ . '/../sidebar.php'; ?>

    <!-- Main Content Area -->
    <div class="main-content">

        <div class="reporting-header">
             <h1><?php echo htmlspecialchars($pageTitle); ?></h1>
             <div class="report-controls">
                <label for="report-type">Report:</label>
                <select id="report-type" name="report-type">
                    <option value="">-- Choose --</option>
                    <option value="sales_summary">Sales Summary</option>
                    <option value="sales_by_client">Sales by Client</option>
                    <option value="sales_by_product">Sales by Product</option>
                    <option value="inventory_status">Low Inventory Status</option>
                    <option value="order_trends">Order Listing</option>
                    <!-- Add more report types here -->
                </select>

                <label for="start-date">From:</label>
                <input type="date" id="start-date" name="start-date">
                <label for="end-date">To:</label>
                <input type="date" id="end-date" name="end-date">

                <button id="generate-report-btn" onclick="generateReport()"><i class="fas fa-play"></i> Generate</button>
            </div>
        </div>

        <hr style="border: 0; border-top: 1px solid #e1e4e8; margin: 20px 0;">

        <!-- Area to display the selected report -->
        <div id="report-display-area">
            <p style="text-align: center; color: #666; margin-top: 20px;">Select a report type and date range (if applicable), then click "Generate".</p>
        </div>

    </div> <!-- End main-content -->

    <!-- JS Includes -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="/js/toast.js"></script> <!-- VERIFY PATH -->

    <!-- Page-specific JS for Reporting -->
    <script>
        function generateReport() {
            const reportType = $('#report-type').val();
            const startDate = $('#start-date').val();
            const endDate = $('#end-date').val();
            const displayArea = $('#report-display-area');
            const generateButton = $('#generate-report-btn');

            if (!reportType) {
                if (typeof showToast === 'function') { showToast('Please select a report type.', 'warning'); }
                else { alert('Please select a report type.'); console.error('showToast function not found.'); }
                return;
            }

            // Define which reports require date range
            const requiresDates = ['sales_summary', 'order_trends', 'sales_by_client', 'sales_by_product'];

            // Basic date validation for relevant reports
            if (requiresDates.includes(reportType) && startDate && endDate && startDate > endDate) {
                 if (typeof showToast === 'function') { showToast('Start date cannot be after end date.', 'warning'); }
                 else { alert('Start date cannot be after end date.'); }
                 return;
            }

            // Show loading state and disable button
            displayArea.html(`<div class=\"loading-message\">Generating ${reportType.replace(/_/g, ' ')} report... <i class=\"fas fa-spinner fa-spin\"></i></div>`);
            generateButton.prop('disabled', true).html('<i class=\"fas fa-spinner fa-spin\"></i> Generating...');

            const formData = new FormData();
            formData.append('report_type', reportType);
            // Only send dates if they are relevant
            if (requiresDates.includes(reportType)) {
                 if(startDate) formData.append('start_date', startDate);
                 if(endDate) formData.append('end_date', endDate);
            }

            // --- !!! UPDATED FETCH URL !!! ---
            // Assumes fetch_report.php was moved to public/api/
            const fetchUrl = '/backend/fetch_report.php';

            fetch(fetchUrl, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    // Try to get specific error message from the HTML response
                    return response.text().then(text => {
                         try {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(text, "text/html");
                            const errorElement = doc.querySelector('.report-error-message');
                            if (errorElement && errorElement.textContent.trim()) {
                                throw new Error(errorElement.textContent.trim()); // Use specific message
                            }
                         } catch (parseError) { /* Ignore */ }
                         // Fallback if parsing failed or no specific message found
                         throw new Error(`HTTP error ${response.status}: Server error occurred. Check server logs for details.`);
                    });
                }
                return response.text(); // Expecting HTML content
            })
            .then(html => {
                displayArea.html(html); // Display the HTML returned from backend
            })
            .catch(error => {
                console.error('Error fetching report:', error);
                 // Display the specific error message from the exception
                 displayArea.html(`<div class=\"report-error-message\">Error loading report: ${escapeHtml(error.message)}.</div>`);
                 if (typeof showToast === 'function') { showToast(`Error loading report: ${escapeHtml(error.message)}`, 'error'); }
                 else { alert(`Error loading report: ${escapeHtml(error.message)}`); }
            })
            .finally(() => {
                 generateButton.prop('disabled', false).html('<i class=\"fas fa-play\"></i> Generate');
            });
        }

         // Helper function to prevent basic XSS
        function escapeHtml(unsafe) {
            if (unsafe === null || unsafe === undefined) return '';
            return String(unsafe)
                 .replace(/&/g, "&amp;")
                 .replace(/</g, "&lt;")
                 .replace(/>/g, "&gt;")
                 .replace(/"/g, "&quot;")
                 .replace(/'/g, "&#039;");
        }

        // Add event listener to toggle date fields based on report selection (optional but good UX)
        $('#report-type').on('change', function() {
            const reportType = $(this).val();
            const requiresDates = ['sales_summary', 'order_trends', 'sales_by_client', 'sales_by_product'];
            const dateControls = $('#start-date, #end-date, label[for="start-date"], label[for="end-date"]');

            if (requiresDates.includes(reportType)) {
                dateControls.show();
            } else {
                dateControls.hide();
                 // Optionally clear date fields when hidden
                 // $('#start-date').val('');
                 // $('#end-date').val('');
            }
        }).trigger('change'); // Trigger on page load to set initial visibility

    </script>
</body>
</html>
<?php
if (isset($conn) && $conn instanceof mysqli) {
    $conn->close();
}
?>